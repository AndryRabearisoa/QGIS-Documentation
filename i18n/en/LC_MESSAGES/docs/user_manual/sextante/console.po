# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-10-24 12:23\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/user_manual/sextante/console.rst:7
# 50d4b12fb5674a08aa7e91cf1ec5a11e
msgid "|updatedisclaimer|"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:10
# 2b3c97840821419d87877fe9b7436229
msgid "Using SEXTANTE from the console. Creating scripts"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:13
# 84d436ca91254e3c93df9db91efc8abf
msgid "Introduction"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:15
# e1dfbfab6e5842e9b0ca7df3203e0740
msgid "The console allows advanced users to increase their productivity and perform complex operations that cannot be performed using any of the other elements of the SEXTANTE GUI. Models involving several algorithms can be defined using the command-line interface, and additional operations such as loops and conditional sentences can be added to create more flexible and powerful workflows."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:22
# 364224423fae48c5a7f6312306a0eccc
msgid "There is not a SEXTANTE console in QGIS, but all SEXTANTE commands are available instead from QGIS built-in Python console. That means that you can incorporate those command to your console work and connect SEXTANTE algorithms to all the other features (including methods from the QGIS API) available from there."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:28
# 4c577b9f406547d798fd6e86c3968ef3
msgid "The code that you can execute from the Python console, even if it does call any SEXTANTE method, can be converted into a new SEXTANTE algorithm that you can later call from the toolbox, the graphical modeler or any other SEXTANTE component, just like you do with any other SEXTANTE algorithm. In fact, some algorithms that you can find in the toolbox, like all the ones in the *mmqgis* group, are simple scripts."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:35
# 1c685d4a07e34a63aa9180e5e36363f7
msgid "In this chapter we will see how to use SEXTANTE from the QGIS Python console, and also how to write your own algorithms using Python."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:39
# d2964c39b8164cc3a8c96c06a8e503ad
msgid "Calling SEXTANTE from the Python console"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:41
# 7ed40922b8a74e21abef20597b2003dc
msgid "The first thing you have to do is to import the ``Sextante`` class with the following line:"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:48
# 6c212205d6a441f2b694bc11cc157eb5
msgid "Now, there is basically just one (interesting) thing you can do with SEXTANTE from the console: to execute an algorithm. That is done using the ``runalg()`` method, which takes the name of the algorithm to execute as its first parameter, and then a variable number of additional parameter depending on the requirements of the algorithm. So the first thing you need to know is the name of the algorithm to execute. That is not the name you see in the toolbox, but rather a unique commandâ€“line name. To find the right name for your algorithm, you can use the ``algslist()`` method. Type the following line in you console:"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:58
# ffedd6e92a4141cd9ad9deb9e0151b2a
msgid "You will see something like this."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:84
# aff5ba3c19204ba5b1fd5d74c4b6111e
msgid "That's a list of all the available algorithms, alphabetically ordered, along with their corresponding command-line names."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:87
# a490aec6590148f2bb0d3ba05b4b82ec
msgid "You can use a string as a parameter for this method. Instead of returning the full list of algorithm, it will only display those that include that string. If, for instance, you are looking for an algorithm to calculate slope from a DEM, type ``alglist(\"slope\")`` to get the following result:"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:103
# 5fff8d94a5834663a80c2185074ae77f
msgid "It is easier now to find the algorithm you are looking for and its command-line name, in this case *saga:slopeaspectcurvature*"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:106
# ca40134bb879487d88a4001540ee1072
msgid "Once you know the command-line name of the algorithm, the next thing to do is to know the right syntax to execute it. That means knowing which parameters are needed and the order in which they have to be passed when calling the ``runalg()`` method. SEXTANTE has a method to describe an algorithm in detail, which can be used to get a list of the parameters that an algorithms require and the outputs that it will generate. To do it, you can use the ``alghelp(name_of_the_algorithm)`` method. Use the command-line name of the algorithm, not the full descriptive name."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:115
# 0122151d9d0a4213a1442f4d575659d7
msgid "Calling the method with ``saga:slopeaspectcurvature`` as parameter, you get the following description."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:130
# 547253c669e24c81a96bbed917b47299
msgid "Now you have everything you need to run any algorithm. As we have already mentioned, there is only one single command to execute algorithms: ``runalg``. Its syntax is as follows:"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:139
# b1fbc40253264317840de84361db693e
msgid "The list of parameters and outputs to add depends on the algorithm you want to run, and is exactly the list that the ``describealg`` method gives you, in the same order as shown."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:143
# 4aae83c7582448a59f0c8a3db6cbe5fd
msgid "Depending on the type of parameter, values are introduced differently. The next one is a quick review of how to introduce values for each type of input parameter"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:147
# 2c9b6a46ddbc4be993e9c7c0a0069072
msgid "Raster Layer, Vector Layer or Table. Simply use a string with the name that identifies the data object to use (the name it has in the QGIS Table of Contents) or a filename (if the corresponding layer is not opened, it will be opened, but not added to the map canvas). If you have an instance of a QGIS object representing the layer, you can also pass it as parameter. If the input is optional and you do not want to use any data object, use ``None``."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:155
# 282181c2452b4bccadab8f58152c72fc
msgid "Selection. If an algorithm has a selection parameter, the value of that parameter should be entered using an integer value. To know the available options, you can use the ``algoptions`` command, as shown in the following example:"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:172
# 8e18f510a3c74fa7bb87b207e772b1c4
msgid "In this case, the algorithm has one of such such parameters, with 7 options. Notice that ordering is zero-based."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:175
# 57845a3aacdc418289c7d77aad14e6d9
msgid "Multiple input. The value is a string with input descriptors separated by semicolons. As in the case of single layers or tables, each input descriptor can be the data object name, or its filepath."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:179
# d5c73ed987ca4463bedcab7ad05c1347
msgid "Table Field from XXX. Use a string with the name of the field to use. This parameter is case-sensitive."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:182
# 60fff4ed25874dc5bb81789d30f2c613
msgid "Fixed Table. Type the list of all table values separated by commas and enclosed between quotes. Values start on the upper row and go from left to right. You can also use a 2D array of values representing the table."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:187
# 7d31a29c229848378f8c2aec8797aa18
msgid "CRS: Enter the EPSG code number of the desired CRS"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:189
# 02c8381e1d9e4de89f47dc5e5885a566
msgid "Extent: You must use a string with xmin,xmax,ymin and ymax values separated by commas"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:192
# 31345e8b3c1a4c80a300a9a0d4f65a07
msgid "Boolean, file, string and numerical parameters do not need any additional explanations."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:195
# de3e372642e0435096202777d4dbaa0a
msgid "Input parameters such as strings booleans or numerical values have default values. To use them, use ``None`` in the corresponding parameter entry."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:198
# fbc9c39007274d2695f094a679d47cc6
msgid "For output data objects, type the filepath to be used to save it, just as it is done from the toolbox. If you want to save the result to a temporary file, use ``None``. The extension of the file determines the file format. If you enter a file extension not included in the ones supported by the algorithm, the default file format for that output type will be used, and its corresponding extension appended to the given filepath."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:206
# a80ecbd55e63471f9a84772e94af8d27
msgid "Unlike when an algorithm is executed from the toolbox, outputs are not added to the map canvas if you execute that same algorithm from the Python console. If you want to add an output to it, you have to do it yourself after running the algorithm. To do so, you can use QGIS API commands, or, even easier, use one of the handy methods provided by SEXTANTE for such task."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:213
# b1fc8eb55b814478831d8ebde8415401
msgid "The ``runalg`` method returns a dictionary with the output names (the ones shown in the algorithm description) as keys and the filepaths of those outputs as values. To add all the outputs generated by an algorithm, pass that dictionary to the ``loadFromAlg()`` method. You can also load an individual layer passing its filepath to the ``load()`` method."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:221
# a32dfe9a862e404ab1787efba0d37f52
msgid "Creating scripts and running them from the toolbox"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:223
# b9f282deb41d42268216e6ae71e4eec9
msgid "You can create your own algorithms by writing the corresponding Python code and adding a few extra lines to supply additional information needed by SEXTANTE. You can find a *Create new script* under the tools group in the script algorithms block of the toolbox. Double click on it to open the script edition dialog. That's where you should type your code. Saving the script from there in the scripts folder (the default one when you open the save file dialog), with ``.py`` extension, will automatically create the corresponding algorithm."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:232
# 11a0b9c2f2fd4492a84786fd3199604b
msgid "The name of the algorithm (the one you will see in the toolbox) is created from the filename, removing its extension and replacing low hyphens with blank spaces."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:236
# 0f6cb6a58f9342de8f072739692e6c9d
msgid "Let's have the following code, which calculates the Topographic Wetness Index(TWI) directly from a DEM"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:250
# 39c2ef5e869e4e068a748df06704b875
msgid "As you can see, it involves 3 algorithms, all of them coming from SAGA. The last one of them calculates de TWI, but it needs a slope layer and a flow accumulation layer. We do not have these ones, but since we have the DEM, we can calculate them calling the corresponding SAGA algorithms."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:256
# 9c65198a38434a118068f91688351d76
msgid "The part of the code where this processing takes place is not difficult to understand if you have read the previous sections in this chapter. The first lines, however, need some additional explanation. They provide SEXTANTE the information it needs to turn your code into an algorithm that can be run from any of its components, like the toolbox or the graphical modeler."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:263
# 2f66fb6f0a4f4d14a63aa5adb96d29ac
msgid "These lines start with a double Python comment symbol and have the following structure: *[parameter_name]=[parameter_type] [optional_values]*. Here is a list of all the parameter types that SEXTANTE supports in its scripts, their syntax and some examples."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:268
# a08bcdafd94948fbac8b80eda4a06cd5
msgid "``raster``. A raster layer"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:270
# 3a43073a027c47f6b75de5f832b5b4c5
msgid "``vector``. A vector layer"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:272
# 09c34fdcdfd84784a90eec4f632f5f5c
msgid "``table``. A table"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:274
# a3130751a934441c8483073d750c84ef
msgid "``number``. A numerical value. A default value must be provided. For instance, ``depth=number 2.4``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:277
# 40ed5eb877854a1e9f5c514e546a9bf2
msgid "``string``. A text string. As in the case of numerical values, a default value must be added. For instance, ``name=string Victor``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:280
# ad97263c2b9542108e3660d545d90f1a
msgid "``boolean``. A boolean value. Add ``True`` or ``False`` after it to set the default value. For example, ``verbose=boolean True``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:283
# 7bb853c422c8431fbb57e21f3cef9cb1
msgid "``multiple raster``. A set of input raster layers."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:285
# aece0ed2768d427e8e2c5c752dc208af
msgid "``multiple vector``. A set of input vector layers."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:287
# 2c1445a41cc94f738382c62c605585d7
msgid "``field``. A field in the attributes table of a vector layer. The name of the layer has to be added after the ``field`` tag. For instance, if you have declared a vector input with ``mylayer=vector``, you could use ``myfield=field mylayer`` to add a field from that layer as parameter."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:293
# f37c027c96f0484da0242f7673d4f7d1
msgid "``folder``. A folder"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:295
# df7edf87bb124ab5913418935df9a642
msgid "``file``. A filename"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:297
# 34f5f2fefa0a499fb00cb752fdb7d554
msgid "The parameter name is the name that will be shown to the user when executing the algorithm, and also the variable name to use in the script code. The value entered by the user for that parameter will be assigned to a variable with that name."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:302
# b418fe8f0dae41869c17e19387153d31
msgid "When showing the name of the parameter to the user, SEXTANTE will edit it to improve its appearance, replacing low hyphens with blankspaces. So, for instance, if you want the user to see a parameter named ``A numerical value``, you can use the variable name ``A_numerical_value``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:307
# d960b939c21046d0b30a485700bfac7b
msgid "Layers and tables values are strings containing the filepath of the corresponding object. To turn them into a QGIS object, you can use the ``getObject()`` method in the ``Sextante`` class. Multiple inputs also have a string value, which contains the filepaths to all selected object, separated by semicolons."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:313
# 47e2db4453514799b71d84afd3e54287
msgid "Outputs are defined in a similar manner, using the following tags:"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:315
# 079891058809401d8c3cf5ae3b1f43c6
msgid "``output raster``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:317
# 06d33278cd3243db9441a4b25d0c8d06
msgid "``output vector``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:319
# 7673bc194acb4cf49d7861a9f7b9c873
msgid "``output table``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:321
# 4e8061ec32f7497fa609111d7989c509
msgid "``output html``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:323
# b384cc1ac8db47a1bd2f74f961d43562
msgid "``output file``"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:325
# 32d257d7ec0a4002abb0fd14b0afb687
msgid "The value assigned to the output variables is always a string with a filepath. It will correspond to a temporary filepath in case the user has not entered any output filename."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:329
# 7339c4798ea240c68206f319d8c75633
msgid "When you declare an output, SEXTANTE will try to add it to QGIS once the algorithm is finished. That is the reason why, although the ``runalg()`` method does not load the layers it produces, the final TWI layer will be loaded, since it is saved to the file entered by the user, which is the value of the corresponding output."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:335
# 88d3e44916c540db824b0968131686c2
msgid "Do not use the ``load()`` method in your script algorithms, but just when working with the console line. If a layer is created as output of an algorithm, it should be declared as such. Otherwise, you will not be able to properly use the algorithm in the modeler, since its syntax (as defined by the tags explained above) will not match what the algorithm really creates."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:342
# a938e0acbb154d0a9bff8a6fdc63ae7b
msgid "In addition to the tags for parameters and outputs, you can also define the group under which the algorithm will be shown, using the ``group`` tag."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:346
# 8762d52f04704e0a914323b2aef40479
msgid "Several examples are provided with SEXTANTE. Please, check them to see real examples of how to create algorithms using this feature of SEXTANTE. You can right-click on any script algorithm and select *Edit script* to edit its code or just to see it."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:352
# e830aba0e85946eb879883e9fc1339c2
msgid "Documenting your scripts"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:354
# 9043ad8184df40d08e3aef0f5bced9fb
msgid "As in the case of models, you can create additional documentation for your script, to explain what they do and how to use them. In the script editing dialog you will find a *Edit script help* button. Click on it and it will take you to the help editing dialog. Check the chapter about the graphical modeler to know more about this dialog and how to use it."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:360
# 7c25fb3a99464f2d92e1f45fcf0d7650
msgid "Help files are saved in the same folder as the script itself, adding the *.help* extension to the filename. Notice that you can edit your script's help before saving it for the first time. If you later close the script editing dialog without saving the script (i.e. you discard it), the help content you wrote will be lost. If your script was already saved and is associated to a filename, saving is done automatically."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:368
# 59684dacf9bf4973bea49eac864cc9be
msgid "Communicating with the user"
msgstr ""

#: ../../source/user_manual/sextante/console.rst:370
# 3446c5a99bcf4d648ae351eb44a8b24b
msgid "You can send messages to the user to inform about the progress of the algorithm. To do so, just print whatever information you want to show in the textbox above the progress bar in the algorithm dialog, using the ``print`` command. For instance, just use ``print \"Processing polygon layer\"`` and the text will be redirected to that textbox."
msgstr ""

#: ../../source/user_manual/sextante/console.rst:376
# 31a8c79506dc472d93d266c0eed738cd
msgid "If the text you print is just a number between 0 and 100, it will be understood as the percentage of the process that has been already finished, and instead of redirecting the text to the textbox, the progress bar will be update to that percentage of completion."
msgstr ""

