# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-10-24 12:23\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:7
# 63296d771edd4483a04178ca3c5a33fc
msgid "|updatedisclaimer|"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:14
# 1fa0e7b02ffc4e01b909c5ed3dcb5bf8
msgid "QGIS Server"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:16
# 6fdf1fa2c53743a186bfe2d4fc910519
msgid "QGIS Server is an open source WMS 1.3 implementation which, in addition, implements advanced cartographic features for thematic mapping. The QGIS Server is a FastCGI/CGI (Common Gateway Interface) application written in C++ that works together with a webserver (e.g. Apache, Lighttpd). It is funded by the EU projects Orchestra, Sany and the city of Uster in Switzerland."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:24
# 8ee0ba73ed044f14adec7c807e83773e
msgid "It uses QGIS as backend for the GIS logic and for map rendering. Furthermore the Qt library is used for graphics and for platform independent C++ programming. In contrast to other WMS software, the QGIS Server uses cartographic rules in as a configuration language, both for the server configuration and for the user-defined cartographic rules."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:32
# 08af7886aa7941c58c9ec32e7fcb259c
msgid "Moreover, the QGIS Server project provides the 'Publish to Web' plugin, a plugin for QGIS desktop which exports the current layers and symbology as a web project for QGIS Server (containing cartographic visualization rules expressed in SLD)."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:37
# f3d4094d9038408cbc06d920f0654c31
msgid "As QGIS desktop and QGIS Server use the same visualization libraries, the maps that are published on the web look the same as in desktop GIS. The Publish to Web plugin currently supports basic symbolization, with more complex cartographic visualization rules introduced manually. As the configuration is performed with the `SLD standard <http://www.opengeospatial.org/standards/sld>`_ and its documented extensions, there is only one standardised language to learn, which greatly simplifies the complexity of creating maps for the Web."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:45
# 8ffb1c8ffa254ad782befcc488265c0b
msgid "In one of the following manuals we will provide a sample configuration to set up a QGIS Server. But for now we recommend to read one of the following URLs to get more information:"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:49
# 9a1f4a940ea847e4a06bba20dc1f6fe0
msgid "http://karlinapp.ethz.ch/qgis_wms/"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:50
# 3051f438396940829a78cc0b9ca7257e
msgid "http://www.qgis.org/wiki/QGIS_mapserver_tutorial"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:51
# 2f46ef3c465e420cb1ca4c239d6c8d71
msgid "http://linfiniti.com/2010/08/qgis-mapserver-a-wms-server-for-the-masses/"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:56
# 0c9679b88f664ef19133f2009d274593
msgid "Sample installation on Debian Squeeze"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:58
# 566e33dd60df46b2a93bda6c83969531
msgid "At this point we will give a short and simple sample installation howto for Debian Squeeze. Many other OS provide packages for QGIS Server, too. If you have to build it all from source, please refer to the URLs above."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:62
# 02c2cde5ddd241889b701c1970c66913
msgid "Apart from qgis and qgis-mapserver you need a webserver, in our case apache2. You can install all packages with aptitude or apt-get install together with other necessary dependency packages."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:66
# cda881c517ee441da3dd4d1842cb83b9
msgid "After installation you should test, if the webserver and qgis server works as expected."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:69
# ae35e098c011490f874177f410c40693
msgid "Make sure the apache server is running with ``/etc/init.d/apache2 start``. Open a web browser and type URL: ``http://localhost``. If apache is up, you should see the message 'It works!'."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:73
# 8b00152252954b7ebc80424096a0c25b
msgid "Now we test the qgis server installation. The :file:`qgis_mapserv.fcgi` is available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard wms that shows the state boundaries of the Unites States of America figure_server_1_. Add the WMS with the URL ``http://localhost/cgi-bin/qgis_mapserv.fcgi`` as described in :ref:`ogc-wms-servers`."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:95
# 607da0c6add84339b5fda3b89ea30b43
msgid "Creating a WMS from a QGIS project"
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:97
# 81610dc977774b4083e8be0305a0d837
msgid "To provide a new qgis wms server we have to create a qgis project file with some data. Here we use the 'regions' and the 'aiport' shapefiles from the qgis_sample_dataset."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:101
# 2a0e0c0a21e14ca5bf8df6ed503177f5
msgid "First load the shapefiles and define the colors and styles of the layers in QGIS and define the project CRS, if not already done. In a next step define the fields 'Service Capabilities', 'Coordinate System Restrictions' and 'Advertised Extend' under :menuselection:`Settings --> Project Properties --> WMS Server` and define the fields 'Service Capabilities', 'Coordinate System Restrictions' and 'Advertised Extend'. Additionally you can enable the checkbox |checkbox| :guilabel:`Add WKT geometry to feature into response` to make the layers queryable (see figure_server_2_). Now save the session in a project file :file:`alaska\\_airports.qgs`."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:123
# f6944a098b424d45bb20737b2280fc89
msgid "To provide the project as a WMS, we create a new folder ``/usr/lib/cgi-bin/project`` with admin privileges and add the project file :file:`alaska\\_airports.qgs` and a copy of the :file:`qgis\\_mapserv.fcgi` file - that's all."
msgstr ""

#: ../../source/user_manual/working_with_ogc/ogc_server_support.rst:127
# 6afb89eab20f4fdaa2cd14ab640d2c7f
msgid "Now we test our project WMS, add the WMS with the URL ``http://localhost/cgi-bin/project/qgis_mapserv.fcgi`` as described in :ref:`Creating a WMS from a QGIS project` to QGIS and load the WMS, see figure_server_3_."
msgstr ""

