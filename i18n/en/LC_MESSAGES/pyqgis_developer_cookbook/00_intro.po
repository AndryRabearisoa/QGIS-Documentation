# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-10-24 12:23\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:9
# 13597b54dfe44c38aa7a6c5b10a82429
msgid "Introduction"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:11
# 09f412d65c1e434f9251fa03bbe95a25
msgid "This document is intended to work both as a tutorial and a reference guide. While it does not list all possible use cases, it should give a good overview of the principal functionality."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:15
# 896427716d3e46c2b12ae87929a209ec
msgid "Starting from 0.9 release, QGIS has optional scripting support using Python language. We've decided for Python as it's one of the most favourite languages for scripting. PyQGIS bindings depend on SIP and PyQt4. The reason for using SIP instead of more widely used SWIG is that the whole QGIS code depends on Qt libraries. Python bindings for Qt (PyQt) are done also using SIP and this allows seamless integration of PyQGIS with PyQt."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:24
# 4edb824deefd443b9ce489bdf4a1eede
msgid "Getting PyQGIS to work (Manual compilation, Troubleshooting)"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:27
# aa485a300cbc4ec4b211cc20762af4b7
msgid "There are several ways how to use QGIS python bindings, they are covered in detail in the following sections:"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:30
# 595bc12ab1db409195fdbac1cc3f9c0d
msgid "issue commands in Python console within QGIS"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:31
# 820dfe8841294e219aa02e8b816fc2e7
msgid "create and use plugins in Python"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:32
# c18c690d5fae4398bb6bb7a621ab331a
msgid "create custom applications based on QGIS API"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:36
# 1c2dda84c5ae4c2f9fff9a7deda933b8
msgid "There is a `complete QGIS API <http://qgis.org/api/>`_ reference that documents the classes from the QGIS libraries. Pythonic QGIS API is nearly identical to the API in C++."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:40
# 5669c1ef72384d18ac18f42e1dbca5d0
msgid "There are some resources about programming with PyQGIS on `QGIS blog <http://blog.qgis.org/>`_. See `QGIS tutorial ported to Python <http://blog.qgis.org/?q=node/59>`_ for some examples of simple 3rd party apps. A good resource when dealing with plugins is to download some plugins from `plugin repository <http://plugins.qgis.org/>`_ and examine their code."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:50
# e6b2cdc1019244d186ae453386393380
msgid "Python Console"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:52
# 092facfcd7a147d6a70021126220ce42
msgid "For scripting, it is possible to take advantage of integrated Python console. It can be opened from menu: :menuselection:`Plugins --> Python Console`. The console opens as a non-modal utility window:"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:62
# d4a9490e923f4bb4a860d9f4fa00412a
msgid "The screenshot above illustrates how to get the layer currntly selected in the layer list, show its ID and optionally, if it is a vector layer, show the feature count. For interaction with QGIS environment, there is :data:`qgis.utils.iface` variable, which is instance of :class:`QgisInterface`. This interface allows access to the map canvas, menus, toolbars and other parts of the QGIS application."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:69
# 3f62e27d9cca457682ccadd234afc7a5
msgid "For convenience of the user, the following statements are executed when the console is started (in future it will be possible to set further initial commands)::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:76
# 3a0b8f7041b14467acea545173a87d39
msgid "For those which use the console often, it may be useful to set a shortcut for triggering the console (within menu :menuselection:`Settings --> Configure shortcuts...`)"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:83
# 1fd0d00e9a6446279b50549b1613a0f8
msgid "Python Plugins"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:85
# e2e57ca061874f05a75b491c223e93fb
msgid "Quantum GIS allows enhancement of its functionality using plugins. This was originally possible only with C++ language. With the addition of Python support to QGIS, it is also possible to use plugins written in Python. Great advantages over C++ plugins is the simplicity of distribution (no compiling for each platform needed) and easier development."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:91
# e4c6f5f6a0f04f48bc78d47c2e42489b
msgid "Many plugins covering various functionality have been written since the introduction of Python support. Plugin installer allows users to easily fetch, upgrade and remove Python plugins. See `Python Plugin Repositories <http://www.qgis.org/wiki/Python_Plugin_Repositories>`_ page for various sources of plugins."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:97
# ee6cbbf8910d4e0c9d136e264c576639
msgid "Creating plugins in Python is simple, see :ref:`developing_plugins` for detailed instructions."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:104
# 68ea1e0e03be42748e849f8bd299d25b
msgid "Python Applications"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:106
# bfd5eefea26d4c9bb31a8a2609bc81bf
msgid "Often when processing some GIS data, it is handy to create some scripts for automating the process instead of doing the same task again and again. With PyQGIS, this is perfectly possible --- import the :mod:`qgis.core` module, initialize it and you are ready for the processing."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:111
# e6324894b58e4ce49775aba5c9b1bd7e
msgid "Or you may want to create an interactive application that uses some GIS functionality --- measure some data, export a map in PDF or any other functionality. The :mod:`qgis.gui` module additionally brings various GUI components, most notably the map canvas widget that can be very easily incorporated into the application with support for zooming, panning and/or any further custom map tools."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:120
# 1b8076c0bbf341a4ba0746238c02edaf
msgid "Using PyQGIS in custom application"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:122
# 39c5e871ab434e81aa5cba07a54d665e
msgid "Note: do *not* use :file:`qgis.py` as a name for your test script --- Python will not be able to import the bindings as the script's name will shadow them."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:125
# c1cc264a66904947ae3a9eabb94e6775
msgid "First of all you have to import qgis module, set QGIS path where to search for resources --- database of projections, providers etc. When you set prefix path with second argument set as :const:`True`, QGIS will initialize all paths with standard dir under the prefix directory. Calling :func:`initQgis` function is important to let QGIS search for the available providers."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:141
# 8a17b13fdd674ad5a4ebc55e5a4c7f74
msgid "Now you can work with QGIS API --- load layers and do some processing or fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:144
# 1234978f778f4252832628b7d55cd7e0
msgid "When you are done with using QGIS library, call :func:`exitQgis` to make sure that everything is cleaned up (e.g. clear map layer registry and delete layers)::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:154
# 850fdc23599c4aa893f9fcb7af026e2f
msgid "Running Custom Applications"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:156
# 1c217c87baec4a9c9b2ff1fbf72042f4
msgid "You will need to tell your system where to search for QGIS libraries and appropriate Python modules if they are not in a well-known location --- otherwise Python will complain::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:163
# f6776c7abc0e49a58cdd2fa2025de899
msgid "This can be fixed by setting the ``PYTHONPATH`` environment variable. In the following commands, ``qgispath`` should be replaced with your actual QGIS installation path:"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:167
# 9c4f21e44771485b848708b8c9e6d1e9
msgid "on Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:168
# 59cc0dc35989405a9c9ec28ec94735ff
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:170
# f0bb4e7da2664f91bfedb71306f84515
msgid "The path to the PyQGIS modules is now known, however they depend on ``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as wrappers). Path to these libraries is typically unknown for the operating system, so you get an import error again (the message might vary depending on the system)::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:178
# a21f164142e14f03bb7718775ae6dcf9
msgid "Fix this by adding the directories where the QGIS libraries reside to search path of the dynamic linker:"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:181
# e91fa38122e645d2a001cdc36596b690
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:182
# 496fa2462cc948b09778cec22eacc092
msgid "on Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:184
# 90244474aae74687808a2b12c972f6bd
msgid "These commands can be put into a bootstrap script that will take care of the startup. When deploying custom applications using PyQGIS, there are usually two possibilities:"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:188
# 7f7e3ee83fe14258877fc242f3a5f052
msgid "require user to install QGIS on his platform prior to installing your application. The application installer should look for default locations of QGIS libraries and allow user to set the path if not found. This approach has the advantage of being simpler, however it requires user to do more steps."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:194
# 26481ff3a04b4a3dac028399efc67bbc
msgid "package QGIS together with your application. Releasing the application may be more challenging and the package will be larger, but the user will be saved from the burden of downloading and installing additional pieces of software."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/00_intro.rst:199
# 31e0641b459a44c287897f2a0f61f50c
msgid "The two deployment models can be mixed - deploy standalone application on Windows and Mac OS X, for Linux leave the installation of QGIS up to user and his package manager."
msgstr ""

