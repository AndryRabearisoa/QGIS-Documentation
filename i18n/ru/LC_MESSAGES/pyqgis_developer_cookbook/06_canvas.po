# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-10-26 23:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:11
# 068c4b24565a4ff79060b72ef74d25ec
msgid "Using Map Canvas"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:13
# 71469899ac4b45a2bfb7bf9234634582
msgid "The Map canvas widget is probably the most important widget within QGIS because it shows the map composed from overlaid map layers and allows interaction with the map and layers. The canvas shows always a part of the map defined by the current canvas extent. The interaction is done through the use of **map tools**: there are tools for panning, zooming, identifying layers, measuring, vector editing and others. Similar to other graphics programs, there is always one tool active and the user can switch between the available tools."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:22
# 829ea672bba842f0a244b8b18c5ea146
msgid "Map canvas is implemented as :class:`QgsMapCanvas` class in :mod:`qgis.gui` module.  The implementation is based on the Qt Graphics View framework. This framework generally provides a surface and a view where custom graphics items are placed and user can interact with them.  We will assume that you are familiar enough with Qt to understand the concepts of the graphics scene, view and items. If not, please make sure to read the `overview of the framework <http://doc.qt.nokia.com/graphicsview.html>`_."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:30
# e1f1f24755cc455d8da67c6ec686afbb
msgid "Whenever the map has been panned, zoomed in/out (or some other action triggers a refresh), the map is rendered again within the current extent. The layers are rendered to an image (using :class:`QgsMapRenderer` class) and that image is then displayed in the canvas. The graphics item (in terms of the Qt graphics view framework) responsible for showing the map is :class:`QgsMapCanvasMap` class. This class also controls refreshing of the rendered map. Besides this item which acts as a background, there may be more **map canvas items**. Typical map canvas items are rubber bands (used for measuring, vector editing etc.) or vertex markers. The canvas items are usually used to give some visual feedback for map tools, for example, when creating a new polygon, the map tool creates a rubber band canvas item that shows the current shape of the polygon. All map canvas items are subclasses of :class:`QgsMapCanvasItem` which adds some more functionality to the basic ``QGraphicsItem`` objects."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:46
# e52fdc4352414c0cac81cb4917028a4b
msgid "To summarize, the map canvas architecture consists of three concepts:"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:48
# d204c0d4f7b34f348522f166e4109b96
msgid "map canvas --- for viewing of the map"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:49
# b38699d3f1814fb7983043f8db0b7802
msgid "map canvas items --- additional items that can be displayed in map canvas"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:50
# deef568728704e839a9e6a0a228cdee2
msgid "map tools --- for interaction with map canvas"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:55
# 52e4b7ab74ac4e89ae5d52fc6513f978
msgid "Embedding Map Canvas"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:57
# 07198debe9324678b0f70ca69d2a6c94
msgid "Map canvas is a widget like any other Qt widget, so using it is as simple as creating and showing it::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:63
# 0c43cf149fa342a6b2bc3a87baf681d2
msgid "This produces a standalone window with map canvas. It can be also embedded into an existing widget or window. When using .ui files and Qt Designer, place a ``QWidget`` on the form and promote it to a new class: set ``QgsMapCanvas`` as class name and set ``qgis.gui`` as header file. The ``pyuic4`` utility will take care of it. This is a very convenient way of embedding the canvas. The other possibility is to manually write the code to construct map canvas and other widgets (as children of a main window or dialog) and create a layout."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:71
# aa365712adff4c87a191f539d7aa91b1
msgid "By default, map canvas has black background and does not use anti-aliasing. To set white background and enable anti-aliasing for smooth rendering::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:77
# e3cab1c5160643158068d58ba4480e76
msgid "(In case you are wondering, ``Qt`` comes from ``PyQt4.QtCore`` module and ``Qt.white`` is one of the predefined ``QColor`` instances.)"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:80
# 4a63b2dea6ba46fab546c5c25d0db81e
msgid "Now it is time to add some map layers. We will first open a layer and add it to the map layer registry.  Then we will set the canvas extent and set the list of layers for canvas::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:97
# 1522182713904a02b9200923ed36e22f
msgid "After executing these commands, the canvas should show the layer you have loaded."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:102
# 741a7083a2ed45c29978d843d74edfcf
msgid "Using Map Tools with Canvas"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:104
# 3b5053fb01e9400d8b17e71ba3ce0e0b
msgid "The following example constructs a window that contains a map canvas and basic map tools for map panning and zooming.  Actions are created for activation of each tool: panning is done with :class:`QgsMapToolPan`, zooming in/out with a pair of :class:`QgsMapToolZoom` instances. The actions are set as checkable and later assigned to the tools to allow automatic handling of checked/unchecked state of the actions -- when a map tool gets activated, its action is marked as selected and the action of the previous map tool is deselected. The map tools are activated using :func:`setMapTool` method."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:169
# 917c4d1df9ea4dfcac5eb99c93a829d9
msgid "You can put the above code to a file, e.g. ``mywnd.py`` and try it out in Python console within QGIS.  This code will put the currently selected layer into newly created canvas::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:177
# 4adaabb492894235a59d2dd5a8f85cf1
msgid "Just make sure that the ``mywnd.py`` file is located within Python search path (``sys.path``). If it isn't, you can simply add it: ``sys.path.insert(0, '/my/path')`` --- otherwise the import statement will fail, not finding the module."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:185
# 1a467aa1515a4053865d37cab18783b4
msgid "Rubber Bands and Vertex Markers"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:187
# 1c8239d7c7b74243a96be4408c951bd1
msgid "To show some additional data on top of the map in canvas, use map canvas items. It is possible to create custom canvas item classes (covered below), however there are two useful canvas item classes for convenience: :class:`QgsRubberBand` for drawing polylines or polygons, and :class:`QgsVertexMarker` for drawing points.  They both work with map coordinates, so the shape is moved/scaled automatically when the canvas is being panned or zoomed."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:195
# bddab29534a449338eced61f8aaf4d25
msgid "To show a polyline::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:201
# 0b144a6cf2694724ba817fe6ab7c37bc
msgid "To show a polygon::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:207
# df321eae11164e628ca787e81f9272b8
msgid "Note that points for polygon is not a plain list: in fact, it is a list of rings containing linear rings of the polygon: first ring is the outer border, further (optional) rings correspond to holes in the polygon."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:211
# 5f1fd34a8a254ed08a93ceae0c1920bc
msgid "Rubber bands allow some customization, namely to change their color and line width::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:217
# e88793676437462c957e848f2b3d1db4
msgid "The canvas items are bound to the canvas scene. To temporarily hide them (and show again, use the :func:`hide` and :func:`show` combo. To completely remove the item, you have to remove it from the scene of the canvas::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:223
# 79c3682e0bb84128af73f3b04f5bea0e
msgid "(in C++ it's possible to just delete the item, however in Python ``del r`` would just delete the reference and the object will still exist as it is owned by the canvas)"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:227
# 6565f5d652d64fde81a92ead414f6ab7
msgid "Rubber band can be also used for drawing points, however :class:`QgsVertexMarker` class is better suited for this (:class:`QgsRubberBand` would only draw a rectangle around the desired point). How to use the vertex marker::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:235
# 97c1d2b05ae24c169ff44bd041d5df45
msgid "This will draw a red cross on position [0,0]. It is possible to customize the icon type, size, color and pen width::"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:243
# 06126c3fe8c549ab8a0286114286de93
msgid "For temprary hiding of vertex markers and removing them from canvas, the same applies as for the rubber bands."
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:249
# c92d4c9955544f86ae3438a3f1d548de
msgid "Writing Custom Map Tools"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:251
# 24c0bf4212f34956929554387daa92be
msgid "**TODO:** how to create a map tool"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:256
# fb382711bac640549946734cdea75d76
msgid "Writing Custom Map Canvas Items"
msgstr ""

#: ../../source/pyqgis_developer_cookbook/06_canvas.rst:258
# 33611f350a774d2e8b32361fba1ca4fa
msgid "**TODO:** how to create a map canvas item"
msgstr ""

