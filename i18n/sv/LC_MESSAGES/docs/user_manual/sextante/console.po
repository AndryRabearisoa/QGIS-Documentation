# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 2f3cd47fb82b4f0da7eb086ae5d5362f
#: ../../source/docs/user_manual/sextante/console.rst:7
msgid "|updatedisclaimer|"
msgstr ""

# d54f72ea34bc419e848ca7680d02cc9e
#: ../../source/docs/user_manual/sextante/console.rst:10
msgid "Using SEXTANTE from the console. Creating scripts"
msgstr ""

# 233b98c9ae214b9593720a4f6a8fcb87
#: ../../source/docs/user_manual/sextante/console.rst:13
msgid "Introduction"
msgstr ""

# 1dfe60578c4149df8c21ec3ad7c0cb3b
#: ../../source/docs/user_manual/sextante/console.rst:15
msgid ""
"The console allows advanced users to increase their productivity and perform "
"complex operations that cannot be performed using any of the other elements "
"of the SEXTANTE GUI. Models involving several algorithms can be defined "
"using the command-line interface, and additional operations such as loops "
"and conditional sentences can be added to create more flexible and powerful "
"workflows."
msgstr ""

# 1915e0eb8beb44b9bf81cc69ee2ded4b
#: ../../source/docs/user_manual/sextante/console.rst:22
msgid ""
"There is not a SEXTANTE console in QGIS, but all SEXTANTE commands are "
"available instead from QGIS built-in Python console. That means that you can "
"incorporate those command to your console work and connect SEXTANTE "
"algorithms to all the other features (including methods from the QGIS API) "
"available from there."
msgstr ""

# c7a32cc54ad74d938076ec73c6bed580
#: ../../source/docs/user_manual/sextante/console.rst:28
msgid ""
"The code that you can execute from the Python console, even if it does call "
"any SEXTANTE method, can be converted into a new SEXTANTE algorithm that you "
"can later call from the toolbox, the graphical modeler or any other SEXTANTE "
"component, just like you do with any other SEXTANTE algorithm. In fact, some "
"algorithms that you can find in the toolbox, like all the ones in the "
"*mmqgis* group, are simple scripts."
msgstr ""

# 44744ca15559491ba4889d7b9d5d33cd
#: ../../source/docs/user_manual/sextante/console.rst:35
msgid ""
"In this chapter we will see how to use SEXTANTE from the QGIS Python "
"console, and also how to write your own algorithms using Python."
msgstr ""

# 564c997b19bb4b698537f98cb810a056
#: ../../source/docs/user_manual/sextante/console.rst:39
msgid "Calling SEXTANTE from the Python console"
msgstr ""

# 070e063c6faa4823b6935fa6672315c6
#: ../../source/docs/user_manual/sextante/console.rst:41
msgid ""
"The first thing you have to do is to import the SEXTANTE functions with the "
"following line:"
msgstr ""

# dfe61632026d4449996f9264bca4a16d
#: ../../source/docs/user_manual/sextante/console.rst:48
msgid ""
"Now, there is basically just one (interesting) thing you can do with "
"SEXTANTE from the console: to execute an algorithm. That is done using the "
"``runalg()`` method, which takes the name of the algorithm to execute as its "
"first parameter, and then a variable number of additional parameter "
"depending on the requirements of the algorithm. So the first thing you need "
"to know is the name of the algorithm to execute. That is not the name you "
"see in the toolbox, but rather a unique commandâ€“line name. To find the right "
"name for your algorithm, you can use the ``algslist()`` method. Type the "
"following line in you console:"
msgstr ""

# e641d0a33ab743f1b8002206087cef55
#: ../../source/docs/user_manual/sextante/console.rst:58
msgid "You will see something like this."
msgstr ""

# 6a2a2fe9792f4b05b12bdef40b30abb9
#: ../../source/docs/user_manual/sextante/console.rst:84
msgid ""
"That's a list of all the available algorithms, alphabetically ordered, along "
"with their corresponding command-line names."
msgstr ""

# cd6ee484946f44c3921bdcf0cf86a381
#: ../../source/docs/user_manual/sextante/console.rst:87
msgid ""
"You can use a string as a parameter for this method. Instead of returning "
"the full list of algorithm, it will only display those that include that "
"string. If, for instance, you are looking for an algorithm to calculate "
"slope from a DEM, type ``alglist(\"slope\")`` to get the following result:"
msgstr ""

# 05e5a49c466a47a1a73443d74e11e553
#: ../../source/docs/user_manual/sextante/console.rst:103
msgid ""
"This result might change depending on the algorithms you have available."
msgstr ""

# 11e6135facb0431fb815659775b0461c
#: ../../source/docs/user_manual/sextante/console.rst:105
msgid ""
"It is easier now to find the algorithm you are looking for and its command-"
"line name, in this case *saga:slopeaspectcurvature*"
msgstr ""

# 52b7d55fab7e47b090a6045558eb7ccd
#: ../../source/docs/user_manual/sextante/console.rst:108
msgid ""
"Once you know the command-line name of the algorithm, the next thing to do "
"is to know the right syntax to execute it. That means knowing which "
"parameters are needed and the order in which they have to be passed when "
"calling the ``runalg()`` method. SEXTANTE has a method to describe an "
"algorithm in detail, which can be used to get a list of the parameters that "
"an algorithms require and the outputs that it will generate. To do it, you "
"can use the ``alghelp(name_of_the_algorithm)`` method. Use the command-line "
"name of the algorithm, not the full descriptive name."
msgstr ""

# 68695c08915646e1833fa37950795f64
#: ../../source/docs/user_manual/sextante/console.rst:117
msgid ""
"Calling the method with ``saga:slopeaspectcurvature`` as parameter, you get "
"the following description."
msgstr ""

# 50dfff6f5d774d89b106db4cb823a823
#: ../../source/docs/user_manual/sextante/console.rst:132
msgid ""
"Now you have everything you need to run any algorithm. As we have already "
"mentioned, there is only one single command to execute algorithms: "
"``runalg``. Its syntax is as follows:"
msgstr ""

# c535c377313b4a8eaec14e0f2a0574e4
#: ../../source/docs/user_manual/sextante/console.rst:141
msgid ""
"The list of parameters and outputs to add depends on the algorithm you want "
"to run, and is exactly the list that the ``describealg`` method gives you, "
"in the same order as shown."
msgstr ""

# 5d7c3ea1ee644d1493fabd85d09540b9
#: ../../source/docs/user_manual/sextante/console.rst:145
msgid ""
"Depending on the type of parameter, values are introduced differently. The "
"next one is a quick review of how to introduce values for each type of input "
"parameter"
msgstr ""

# 0af0a2fc613f4ab0b733912def91259c
#: ../../source/docs/user_manual/sextante/console.rst:149
msgid ""
"Raster Layer, Vector Layer or Table. Simply use a string with the name that "
"identifies the data object to use (the name it has in the QGIS Table of "
"Contents) or a filename (if the corresponding layer is not opened, it will "
"be opened, but not added to the map canvas). If you have an instance of a "
"QGIS object representing the layer, you can also pass it as parameter. If "
"the input is optional and you do not want to use any data object, use "
"``None``."
msgstr ""

# b3b694fe028b437b8f8e850d2a5cee48
#: ../../source/docs/user_manual/sextante/console.rst:157
msgid ""
"Selection. If an algorithm has a selection parameter, the value of that "
"parameter should be entered using an integer value. To know the available "
"options, you can use the ``algoptions`` command, as shown in the following "
"example:"
msgstr ""

# cd90202d81a64da8ab7e47c6f60e49b1
#: ../../source/docs/user_manual/sextante/console.rst:174
msgid ""
"In this case, the algorithm has one of such such parameters, with 7 options. "
"Notice that ordering is zero-based."
msgstr ""

# f77648a7ed44468ea65fe846c5167fc2
#: ../../source/docs/user_manual/sextante/console.rst:177
msgid ""
"Multiple input. The value is a string with input descriptors separated by "
"semicolons. As in the case of single layers or tables, each input descriptor "
"can be the data object name, or its filepath."
msgstr ""

# 6f41168c9b274ce5b9ba7a391ddc1fd0
#: ../../source/docs/user_manual/sextante/console.rst:181
msgid ""
"Table Field from XXX. Use a string with the name of the field to use. This "
"parameter is case-sensitive."
msgstr ""

# 67614459ccf44e4dbfeb7c4fcdd22604
#: ../../source/docs/user_manual/sextante/console.rst:184
msgid ""
"Fixed Table. Type the list of all table values separated by commas and "
"enclosed between quotes. Values start on the upper row and go from left to "
"right. You can also use a 2D array of values representing the table."
msgstr ""

# 79760215fb204c12a9bc60ed770bad1e
#: ../../source/docs/user_manual/sextante/console.rst:189
msgid "CRS: Enter the EPSG code number of the desired CRS"
msgstr ""

# ce987e0025304900857bfec7b3832b74
#: ../../source/docs/user_manual/sextante/console.rst:191
msgid ""
"Extent: You must use a string with xmin,xmax,ymin and ymax values separated "
"by commas"
msgstr ""

# 7f977bba5727434d8ed40f1b55c60c69
#: ../../source/docs/user_manual/sextante/console.rst:194
msgid ""
"Boolean, file, string and numerical parameters do not need any additional "
"explanations."
msgstr ""

# 39e2a24ef3364b6bb608db0ca8f42148
#: ../../source/docs/user_manual/sextante/console.rst:197
msgid ""
"Input parameters such as strings booleans or numerical values have default "
"values. To use them, use ``None`` in the corresponding parameter entry."
msgstr ""

# a6ba9fc2e3404ddd97727e75eff2e097
#: ../../source/docs/user_manual/sextante/console.rst:200
msgid ""
"For output data objects, type the filepath to be used to save it, just as it "
"is done from the toolbox. If you want to save the result to a temporary "
"file, use ``None``. The extension of the file determines the file format. If "
"you enter a file extension not included in the ones supported by the "
"algorithm, the default file format for that output type will be used, and "
"its corresponding extension appended to the given filepath."
msgstr ""

# a3ce343cdf404c6eb0f220004fee9c2e
#: ../../source/docs/user_manual/sextante/console.rst:208
msgid ""
"Unlike when an algorithm is executed from the toolbox, outputs are not added "
"to the map canvas if you execute that same algorithm from the Python "
"console. If you want to add an output to it, you have to do it yourself "
"after running the algorithm. To do so, you can use QGIS API commands, or, "
"even easier, use one of the handy methods provided by SEXTANTE for such task."
msgstr ""

# e2669a69b89b451ebeebe69d5677e58f
#: ../../source/docs/user_manual/sextante/console.rst:215
msgid ""
"The ``runalg`` method returns a dictionary with the output names (the ones "
"shown in the algorithm description) as keys and the filepaths of those "
"outputs as values. To add all the outputs generated by an algorithm, pass "
"that dictionary to the ``loadFromAlg()`` method. You can also load an "
"individual layer passing its filepath to the ``load()`` method."
msgstr ""

# a2aadaf35a0b4a3bb80353e81c08f7db
#: ../../source/docs/user_manual/sextante/console.rst:223
msgid "Creating scripts and running them from the toolbox"
msgstr ""

# 39df1b907e6141ababff1d6680862c7e
#: ../../source/docs/user_manual/sextante/console.rst:225
msgid ""
"You can create your own algorithms by writing the corresponding Python code "
"and adding a few extra lines to supply additional information needed by "
"SEXTANTE. You can find a *Create new script* under the tools group in the "
"script algorithms block of the toolbox. Double click on it to open the "
"script edition dialog. That's where you should type your code. Saving the "
"script from there in the scripts folder (the default one when you open the "
"save file dialog), with ``.py`` extension, will automatically create the "
"corresponding algorithm."
msgstr ""

# b87e7bcdd8cd4871b8e4a0f292f88209
#: ../../source/docs/user_manual/sextante/console.rst:234
msgid ""
"The name of the algorithm (the one you will see in the toolbox) is created "
"from the filename, removing its extension and replacing low hyphens with "
"blank spaces."
msgstr ""

# 690a3c84f86645d7b9318c2101af657f
#: ../../source/docs/user_manual/sextante/console.rst:238
msgid ""
"Let's have the following code, which calculates the Topographic Wetness Index"
"(TWI) directly from a DEM"
msgstr ""

# f3c95d0857ed47cdae2ba902764d7bb3
#: ../../source/docs/user_manual/sextante/console.rst:252
msgid ""
"As you can see, it involves 3 algorithms, all of them coming from SAGA. The "
"last one of them calculates de TWI, but it needs a slope layer and a flow "
"accumulation layer. We do not have these ones, but since we have the DEM, we "
"can calculate them calling the corresponding SAGA algorithms."
msgstr ""

# 43d93deb671742c8907a190f5a143b8d
#: ../../source/docs/user_manual/sextante/console.rst:258
msgid ""
"The part of the code where this processing takes place is not difficult to "
"understand if you have read the previous sections in this chapter. The first "
"lines, however, need some additional explanation. They provide SEXTANTE the "
"information it needs to turn your code into an algorithm that can be run "
"from any of its components, like the toolbox or the graphical modeler."
msgstr ""

# 4d3a5c8412f04d4bbf5995bb80de82cf
#: ../../source/docs/user_manual/sextante/console.rst:265
msgid ""
"These lines start with a double Python comment symbol and have the following "
"structure: *[parameter_name]=[parameter_type] [optional_values]*. Here is a "
"list of all the parameter types that SEXTANTE supports in its scripts, their "
"syntax and some examples."
msgstr ""

# 632ea3aaf65149619dd626008166802d
#: ../../source/docs/user_manual/sextante/console.rst:270
msgid "``raster``. A raster layer"
msgstr ""

# 2917d92df10c463a9379733b9e88d130
#: ../../source/docs/user_manual/sextante/console.rst:272
msgid "``vector``. A vector layer"
msgstr ""

# 91f2e0e9d6f548ff8914f0242814cf5d
#: ../../source/docs/user_manual/sextante/console.rst:274
msgid "``table``. A table"
msgstr ""

# c66d72fa52e44632bf08c27003a1f312
#: ../../source/docs/user_manual/sextante/console.rst:276
msgid ""
"``number``. A numerical value. A default value must be provided. For "
"instance, ``depth=number 2.4``"
msgstr ""

# 3d014979f13f4263ab59b210eece7c2c
#: ../../source/docs/user_manual/sextante/console.rst:279
msgid ""
"``string``. A text string. As in the case of numerical values, a default "
"value must be added. For instance, ``name=string Victor``"
msgstr ""

# 1e2b2bffc659443892a1dae5ef07ea57
#: ../../source/docs/user_manual/sextante/console.rst:282
msgid ""
"``boolean``. A boolean value. Add ``True`` or ``False`` after it to set the "
"default value. For example, ``verbose=boolean True``"
msgstr ""

# ecb945b26c9246d09e1cc48d4f93f7eb
#: ../../source/docs/user_manual/sextante/console.rst:285
msgid "``multiple raster``. A set of input raster layers."
msgstr ""

# cc43d37b87ec454b9601bb82163713cc
#: ../../source/docs/user_manual/sextante/console.rst:287
msgid "``multiple vector``. A set of input vector layers."
msgstr ""

# 1a5aa07c32a045afbfa27151fc6c15fe
#: ../../source/docs/user_manual/sextante/console.rst:289
msgid ""
"``field``. A field in the attributes table of a vector layer. The name of "
"the layer has to be added after the ``field`` tag. For instance, if you have "
"declared a vector input with ``mylayer=vector``, you could use "
"``myfield=field mylayer`` to add a field from that layer as parameter."
msgstr ""

# 7c528245111646809cec9579283f3846
#: ../../source/docs/user_manual/sextante/console.rst:295
msgid "``folder``. A folder"
msgstr ""

# 976789a7009f47379ffdf6c0ce6a8abb
#: ../../source/docs/user_manual/sextante/console.rst:297
msgid "``file``. A filename"
msgstr ""

# 4846ded4eb6e4148aff9ed8b6bb31403
#: ../../source/docs/user_manual/sextante/console.rst:299
msgid ""
"The parameter name is the name that will be shown to the user when executing "
"the algorithm, and also the variable name to use in the script code. The "
"value entered by the user for that parameter will be assigned to a variable "
"with that name."
msgstr ""

# 096f825c92a547639ffaf3feb1920495
#: ../../source/docs/user_manual/sextante/console.rst:304
msgid ""
"When showing the name of the parameter to the user, SEXTANTE will edit it to "
"improve its appearance, replacing low hyphens with blankspaces. So, for "
"instance, if you want the user to see a parameter named ``A numerical "
"value``, you can use the variable name ``A_numerical_value``"
msgstr ""

# e41ca8dd999c45f4a59c907f6cbc166f
#: ../../source/docs/user_manual/sextante/console.rst:309
msgid ""
"Layers and tables values are strings containing the filepath of the "
"corresponding object. To turn them into a QGIS object, you can use the "
"``sextante.getObjectFromUri()`` function. Multiple inputs also have a string "
"value, which contains the filepaths to all selected object, separated by "
"semicolons."
msgstr ""

# d40aa4994e0e4742a7a3fea12f4e2a77
#: ../../source/docs/user_manual/sextante/console.rst:315
msgid "Outputs are defined in a similar manner, using the following tags:"
msgstr ""

# a579318cd88149d48a0d881b383549d7
#: ../../source/docs/user_manual/sextante/console.rst:317
msgid "``output raster``"
msgstr ""

# 08be576105cc40ec86aa7a9a28178d2a
#: ../../source/docs/user_manual/sextante/console.rst:319
msgid "``output vector``"
msgstr ""

# 29989ad959c144d395508cb73dfce057
#: ../../source/docs/user_manual/sextante/console.rst:321
msgid "``output table``"
msgstr ""

# 3669457c96304a5fb0feefb8b5132a2c
#: ../../source/docs/user_manual/sextante/console.rst:323
msgid "``output html``"
msgstr ""

# 4c3df8f52a2c41d9aa80515bcf398312
#: ../../source/docs/user_manual/sextante/console.rst:325
msgid "``output file``"
msgstr ""

# 6d23374f10104ebbb705084399b6afc2
#: ../../source/docs/user_manual/sextante/console.rst:327
msgid "``output number``"
msgstr ""

# 8aafab6a72654753a918aecc13e6d37d
#: ../../source/docs/user_manual/sextante/console.rst:329
msgid "``output string``"
msgstr ""

# 3a4c03a57fd14d60970a3e21def0a331
#: ../../source/docs/user_manual/sextante/console.rst:331
msgid ""
"The value assigned to the output variables is always a string with a "
"filepath. It will correspond to a temporary filepath in case the user has "
"not entered any output filename."
msgstr ""

# 2ede264d28384296af42bfaf7878d869
#: ../../source/docs/user_manual/sextante/console.rst:335
msgid ""
"When you declare an output, SEXTANTE will try to add it to QGIS once the "
"algorithm is finished. That is the reason why, although the ``runalg()`` "
"method does not load the layers it produces, the final TWI layer will be "
"loaded, since it is saved to the file entered by the user, which is the "
"value of the corresponding output."
msgstr ""

# 660daf3b80d343faacc90771c7d27b9d
#: ../../source/docs/user_manual/sextante/console.rst:341
msgid ""
"Do not use the ``load()`` method in your script algorithms, but just when "
"working with the console line. If a layer is created as output of an "
"algorithm, it should be declared as such. Otherwise, you will not be able to "
"properly use the algorithm in the modeler, since its syntax (as defined by "
"the tags explained above) will not match what the algorithm really creates."
msgstr ""

# 6c8f6ca64d304cd9946eb2618a17536b
#: ../../source/docs/user_manual/sextante/console.rst:348
msgid ""
"Hidden outputs (numbers and strings) do not have a value. Instead, it is you "
"who has to assign a value to them. To do so, just set the value of a "
"variable with the name you used to declare that output. For instance, if you "
"have used this declaration,"
msgstr ""

# daef3b905c224991881fdd3f8f973a64
#: ../../source/docs/user_manual/sextante/console.rst:357
msgid "the following line will set the value of the output to 5:"
msgstr ""

# 6cc0c3b71b054b5591e9f102f460d55c
#: ../../source/docs/user_manual/sextante/console.rst:363
msgid ""
"In addition to the tags for parameters and outputs, you can also define the "
"group under which the algorithm will be shown, using the ``group`` tag."
msgstr ""

# 3480ff00de8a483ca3b89637011580e1
#: ../../source/docs/user_manual/sextante/console.rst:367
msgid ""
"If you algorithm takes a long time to process, it is a good idea to inform "
"the user. You have a global named ``progress`` available, with two available "
"methods: ``setText(text)`` and ``setPercentage(percent)`` to modify the "
"progress text and the progress bar."
msgstr ""

# d4d5a1b702d04300865f8f60880660e3
#: ../../source/docs/user_manual/sextante/console.rst:372
msgid ""
"Several examples are provided with SEXTANTE. Please, check them to see real "
"examples of how to create algorithms using this feature of SEXTANTE. You can "
"right-click on any script algorithm and select *Edit script* to edit its "
"code or just to see it."
msgstr ""

# ee33a42e616f4602a4dc5b8cf3360ca3
#: ../../source/docs/user_manual/sextante/console.rst:378
msgid "Documenting your scripts"
msgstr ""

# ab8d0f586006470085fb6683eed02df4
#: ../../source/docs/user_manual/sextante/console.rst:380
msgid ""
"As in the case of models, you can create additional documentation for your "
"script, to explain what they do and how to use them. In the script editing "
"dialog you will find a *Edit script help* button. Click on it and it will "
"take you to the help editing dialog. Check the chapter about the graphical "
"modeler to know more about this dialog and how to use it."
msgstr ""

# 26a0cca55dee4be7be1315fcb4c319ad
#: ../../source/docs/user_manual/sextante/console.rst:386
msgid ""
"Help files are saved in the same folder as the script itself, adding the *."
"help* extension to the filename. Notice that you can edit your script's help "
"before saving it for the first time. If you later close the script editing "
"dialog without saving the script (i.e. you discard it), the help content you "
"wrote will be lost. If your script was already saved and is associated to a "
"filename, saving is done automatically."
msgstr ""
