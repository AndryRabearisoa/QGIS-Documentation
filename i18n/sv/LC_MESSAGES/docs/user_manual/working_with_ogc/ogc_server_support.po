# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 0428feeeadeb487aaa4c4f0d2f92bdee
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:7
msgid "|updatedisclaimer|"
msgstr ""

# cd1a93755e2a47f5ace78fa4bef7ebbe
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:14
msgid "QGIS Server"
msgstr ""

# e70da776f4004d45b3180af5a753d976
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:16
msgid ""
"QGIS Server is an open source WMS 1.3 and WFS 1.0.0 implementation which, in "
"addition, implements advanced cartographic features for thematic mapping. "
"The QGIS Server is a FastCGI/CGI (Common Gateway Interface) application "
"written in C++ that works together with a webserver (e.g. Apache, Lighttpd). "
"It is funded by the EU projects Orchestra, Sany and the city of Uster in "
"Switzerland."
msgstr ""

# af91c1a4ab9c41d789513e3bd305420f
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:24
msgid ""
"It uses QGIS as backend for the GIS logic and for map rendering. Furthermore "
"the Qt library is used for graphics and for platform independent C++ "
"programming. In contrast to other WMS software, the QGIS Server uses "
"cartographic rules in as a configuration language, both for the server "
"configuration and for the user-defined cartographic rules."
msgstr ""

# 573ed4f4bfce4053ae31d7cdf399c1a8
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:32
msgid ""
"Moreover, the QGIS Server project provides the 'Publish to Web' plugin, a "
"plugin for QGIS desktop which exports the current layers and symbology as a "
"web project for QGIS Server (containing cartographic visualization rules "
"expressed in SLD)."
msgstr ""

# a2e480280d66425689bde9933795d6d5
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:37
msgid ""
"As QGIS desktop and QGIS Server use the same visualization libraries, the "
"maps that are published on the web look the same as in desktop GIS. The "
"Publish to Web plugin currently supports basic symbolization, with more "
"complex cartographic visualization rules introduced manually. As the "
"configuration is performed with the `SLD standard <http://www.opengeospatial."
"org/standards/sld>`_ and its documented extensions, there is only one "
"standardised language to learn, which greatly simplifies the complexity of "
"creating maps for the Web."
msgstr ""

# fa197ba3de5043f2818977c0068943d9
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:45
msgid ""
"In one of the following manuals we will provide a sample configuration to "
"set up a QGIS Server. But for now we recommend to read one of the following "
"URLs to get more information:"
msgstr ""

# 91c8455fb2fa4a2b88db3ef13d0de744
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:49
msgid "http://karlinapp.ethz.ch/qgis_wms/"
msgstr ""

# 7a8bda67b08e429fa3018a03366944e5
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:50
msgid "http://www.qgis.org/wiki/QGIS_mapserver_tutorial"
msgstr ""

# fb1b8c98a7f84e8fa86982f3105a3998
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:51
msgid ""
"http://linfiniti.com/2010/08/qgis-mapserver-a-wms-server-for-the-masses/"
msgstr ""

# abc9dce2291d47049b1663b0a742e29d
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:56
msgid "Sample installation on Debian Squeeze"
msgstr ""

# 813e0fc31f264203a25bc738882c272a
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:58
msgid ""
"At this point we will give a short and simple sample installation howto for "
"Debian Squeeze. Many other OS provide packages for QGIS Server, too. If you "
"have to build it all from source, please refer to the URLs above."
msgstr ""

# a95788b0afb54118b4d407a395502d8b
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:62
msgid ""
"Apart from qgis and qgis-mapserver you need a webserver, in our case "
"apache2. You can install all packages with aptitude or apt-get install "
"together with other necessary dependency packages."
msgstr ""

# 642220a825c942518809bdd0dfb4bb6c
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:66
msgid ""
"After installation you should test, if the webserver and qgis server works "
"as expected."
msgstr ""

# 818fb992472e4a95ab9b325b2547a9bb
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:69
msgid ""
"Make sure the apache server is running with ``/etc/init.d/apache2 start``. "
"Open a web browser and type URL: ``http://localhost``. If apache is up, you "
"should see the message 'It works!'."
msgstr ""

# 06d2ba145f8845d59d2d1722bc2a876c
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:73
msgid ""
"Now we test the qgis server installation. The :file:`qgis_mapserv.fcgi` is "
"available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard "
"wms that shows the state boundaries of the Unites States of America "
"figure_server_1_. Add the WMS with the URL ``http://localhost/cgi-bin/"
"qgis_mapserv.fcgi`` as described in :ref:`ogc-wms-servers`."
msgstr ""

# 8a1dc338ee334508ac0ce99ad5217c19
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:95
msgid "Creating a WMS from a QGIS project"
msgstr ""

# c2ad539e383f41988bc35b9a938e9c9f
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:97
msgid ""
"To provide a new qgis wms server we have to create a qgis project file with "
"some data. Here we use the 'regions' and the 'aiport' shapefiles from the "
"qgis_sample_dataset."
msgstr ""

# c9ad452fbd9048a1856b8e826b4b0d04
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:101
msgid ""
"First load the shapefiles and define the colors and styles of the layers in "
"QGIS and define the project CRS, if not already done. In a next step define "
"the fields 'Service Capabilities', 'Coordinate System Restrictions' and "
"'Advertised Extend' under :menuselection:`Settings --> Project Properties --"
"> WMS Server` and define the fields 'Service Capabilities', 'Coordinate "
"System Restrictions' and 'Advertised Extend'. Additionally you can enable "
"the checkbox |checkbox| :guilabel:`Add WKT geometry to feature into "
"response` to make the layers queryable (see figure_server_2_). Now save the "
"session in a project file :file:`alaska\\_airports.qgs`."
msgstr ""

# bc614f295e1949efa787056aa1e62222
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:123
msgid ""
"To provide the project as a WMS, we create a new folder ``/usr/lib/cgi-bin/"
"project`` with admin privileges and add the project file :file:`alaska"
"\\_airports.qgs` and a copy of the :file:`qgis\\_mapserv.fcgi` file - that's "
"all."
msgstr ""

# 9bdfe083825d41b89f0ce352be4aaeea
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:127
msgid ""
"Now we test our project WMS, add the WMS with the URL ``http://localhost/cgi-"
"bin/project/qgis_mapserv.fcgi`` as described in :ref:`Creating a WMS from a "
"QGIS project` to QGIS and load the WMS, see figure_server_3_."
msgstr ""
