# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# b77259bb820a435da98c7bd35f5c16a7
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:11
msgid "Reading And Storing Settings"
msgstr ""

# 764e16dad2374ea9ab0bf302daa48120
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:13
msgid ""
"Many times it is useful for a plugin to save some variables so that the user "
"does not have to enter or select them again next time the plugin is run."
msgstr ""

# bf5168a249664bae8aaddab63420270c
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:16
msgid ""
"These variables can be saved a retrieved with help of Qt and QGIS API. For "
"each variable, you should pick a key that will be used to access the "
"variable --- for user's favourite color you could use key \"favourite_color"
"\" or any other meaningful string. It is recommended to give some structure "
"to naming of keys."
msgstr ""

# 713eae4df3bc440b9a172ae11b0367a1
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:21
msgid "We can make difference between several types of settings:"
msgstr ""

# 5bbcad9cd0da4300b4eaf00bd7cc83b2
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:25
msgid ""
"**global settings** --- they are bound to the user at particular machine. "
"QGIS itself stores a lot of global settings, for example, main window size "
"or default snapping tolerance. This functionality is provided directly by Qt "
"framework by the means of QSettings class. By default, this class stores "
"settings in system's \"native\" way of storing settings, that is --- "
"registry (on Windows), .plist file (on Mac OS X) or .ini file (on Unix). The "
"`QSettings documentation <http://doc.qt.nokia.com/stable/qsettings.html>`_ "
"is comprehensive, so we will provide just a simple example::"
msgstr ""

# 86742a9866674e68966d7d5b9d31b5bb
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:46
msgid ""
"Qt uses QVariant instances for variable values in setValue() and value() "
"methods. Your values are automagically converted from Python to QVariant "
"instances, however the conversion from QVariant to Python is not automatic: "
"that's why we use the to*() methods. Few more things to note here:"
msgstr ""

# 864cbd4b885c4658b6c523273874eab7
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:51
msgid ""
"the second parameter to value() method is optional and states the default "
"value if there is no previous value set"
msgstr ""

# 0b4277c9c4544983abba1c3ef5118418
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:53
msgid "toString() returns a QString instance, not a Python string"
msgstr ""

# d12648288d6c41e9aa4d33d95ccc6568
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:54
msgid ""
"toInt() and toDouble() return tuples (value, ok) --- the second item "
"indicates const:`True` if whether the conversion from QVariant to the number "
"went fine --- in this example we ignore that indicator and only take the "
"value."
msgstr ""

# ca31eb71135b4b19a1e68ce0cc16fca7
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:60
msgid ""
"**project settings** --- vary between different projects and therefore they "
"are connected with a project file. Map canvas background or destination "
"coordinate reference system (CRS) are examples --- white background and "
"WGS84 might be suitable for one project, while yellow background and UTM "
"projection for another one. An example of usage follows::"
msgstr ""

# 55971f445fc64fd7bf05a706a47519b2
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:76
msgid ""
"Hopefully the QgsProject class will be updated in future to provide API "
"similar to the one of QSettings class. Due to some limitations of Python "
"bindings, it is not possible to save floating point numbers."
msgstr ""

# 09b4be57a5e54160b249c69da541a6a7
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:82
msgid ""
"**map layer settings** --- these settings are related to a particular "
"instance of a map layer with a project. They are *not* connected with "
"underlying data source of a layer, so if you create two map layer instances "
"of one shapefile, they will not share the settings. The settings are stored "
"in project file, so if the user opens the project again, the layer-related "
"settings will be there again. This functionality has been added in QGIS "
"v1.4. The API is similar to QSettings --- it takes and returns QVariant "
"instances::"
msgstr ""

# eed5e36092004160bf52108afd220d97
#: ../../source/docs/pyqgis_developer_cookbook/10_settings.rst:98
msgid "Keys for settings that can be shared among plugins"
msgstr ""
