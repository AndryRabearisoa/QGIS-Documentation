# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 43c434b2f15b4a17a0d7fc4b536d5e9c
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:11
msgid "Geometry Handling"
msgstr ""

# 718624bc92164fd0846a66f378c0ecdd
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:13
msgid ""
"Points, linestrings, polygons that represent a spatial feature are commonly "
"referred to as geometries. In QGIS they are represented with :class:"
"`QgsGeometry` class. All possible geometry types are nicely shown in `JTS "
"discussion page <http://www.vividsolutions.com/jts/discussion."
"htm#spatialDataModel>`_."
msgstr ""

# 709aac39da7b49e78c5cb3813b987d10
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:18
msgid ""
"Sometimes one geometry is actually a collection of simple (single-part) "
"geometries. Such a geometry is called multi-part geometry. If it contains "
"just one type of simple geometry, we call it multi-point, multi-linestring "
"or multi-polygon. For example, a country consisting of multiple islands can "
"be represented as a multi-polygon."
msgstr ""

# 4803f58338c34201b53de5452d78fc73
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:24
msgid ""
"The coordinates of geometries can be in any coordinate reference system "
"(CRS). When fetching features from a layer, associated geometries will have "
"coordinates in CRS of the layer."
msgstr ""

# 4b93b92217904fa88c36a1f90d9f0854
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:31
msgid "Geometry Construction"
msgstr ""

# 83495d3b9d2142cd8f6128ac2eca2ac7
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:33
msgid "There are several options how to create a geometry:"
msgstr ""

# 8079278af39840cfb04521b816f08feb
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:35
msgid "from coordinates::"
msgstr ""

# c47e457174d245f9bdeac208061a3938
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:41
msgid "Coordinates are given using :class:`QgsPoint` class."
msgstr ""

# 69a499ff03e94dc39e3deba3ee964685
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:43
msgid ""
"Polyline (Linestring) is represented by a list of points. Polygon is "
"represented by a list of linear rings (i.e. closed linestrings). First ring "
"is outer ring (boundary), optional subsequent rings are holes in the polygon."
msgstr ""

# 4bcf7c216d624b3f83851e932cab0886
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:47
msgid ""
"Multi-part geometries go one level further: multi-point is a list of points, "
"multi-linestring is a list of linestrings and multi-polygon is a list of "
"polygons."
msgstr ""

# 675d324bf8634057aed0c97b3e877b60
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:51
msgid "from well-known text (WKT)::"
msgstr ""

# 19082b8dadf24bf0962984aadf44048a
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:55
msgid "from well-known binary (WKB)::"
msgstr ""

# a3ac852d51194d1c8b17b3701f588693
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:64
msgid "Access to Geometry"
msgstr ""

# abc4fd5c142147b7a0f54f5b3fcf9329
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:66
msgid ""
"First, you should find out geometry type, :func:`wkbType` method is the one "
"to use --- it returns a value from QGis.WkbType enumeration::"
msgstr ""

# 0859e0f57e614e8eaab00367158e3cdf
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:78
msgid ""
"As an alternative, one can use :func:`type` method which returns a value "
"from QGis.GeometryType enumeration. There is also a helper function :func:"
"`isMultipart` to find out whether a geometry is multipart or not."
msgstr ""

# b08034e4a7134c2e805d6196d4c5ec7c
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:82
msgid ""
"To extract information from geometry there are accessor functions for every "
"vector type. How to use accessors::"
msgstr ""

# efb2fdf2f0b84b8698e7034a0aca91ba
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:92
msgid ""
"Note: the tuples (x,y) are not real tuples, they are :class:`QgsPoint` "
"objects, the values are accessible with :func:`x` and :func:`y` methods."
msgstr ""

# e01ab80038a345deb0f68570c3623fc1
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:95
msgid ""
"For multipart geometries there are similar accessor functions: :func:"
"`asMultiPoint`, :func:`asMultiPolyline`, :func:`asMultiPolygon()`."
msgstr ""

# a145f06bf8e6448e95e81ece2727c58e
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:101
msgid "Geometry Predicates and Operations"
msgstr ""

# 946d55a1f1ad4c7ba56a548ae0d81db5
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:103
msgid ""
"QGIS uses GEOS library for advanced geometry operations such as geometry "
"predicates (:func:`contains`, :func:`intersects`, ...) and set operations (:"
"func:`union`, :func:`difference`, ...)"
msgstr ""

# 7bf0b3b10bc047f8ae397341ae7f9daa
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:108
msgid "**TODO:**"
msgstr ""

# 1f42b963c8dc4d2c9556cd96f7644b30
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:110
msgid ":func:`area`, :func:`length`, :func:`distance`"
msgstr ""

# c8d2c0e8942f4e38b082d66cd3d07881
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:111
msgid ":func:`transform`"
msgstr ""

# ee05f9344c084e66bc75175a47707916
#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:112
msgid "available predicates and set operations"
msgstr ""
