# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# d6648f3ee99e4c5081691187f9061f8e
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:9
msgid "Projections Support"
msgstr ""

# a489ccd499ec4f629ec9e69959a1f9b7
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:14
msgid "Coordinate reference systems"
msgstr ""

# 2b6eaccf9bd4496580b5df9a97095ec0
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:16
msgid ""
"Coordinate reference systems (CRS) are encapsulated by :class:"
"`QgsCoordinateReferenceSystem` class. Instances of this class can be created "
"by several different ways:"
msgstr ""

# daa4421691e4464282f1f7ec4766f8ef
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:20
msgid "specify CRS by its ID::"
msgstr ""

# 258df89f84b94f41844fcacbbfeced23
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:25
msgid "QGIS uses three different IDs for every reference system:"
msgstr ""

# d0f569cdc8484987810fc3d305d63940
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:27
msgid ":const:`PostgisCrsId` - IDs used within PostGIS databases."
msgstr ""

# 8ce37894cc50427794cf430295d6854d
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:28
msgid ":const:`InternalCrsId` - IDs internally used in QGIS database."
msgstr ""

# b6a5d35bcf9f408aae9ea0cd25b1e489
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:29
msgid ":const:`EpsgCrsId` - IDs assigned by the EPSG organization"
msgstr ""

# 95c1d9cee6744f35a76fae626cad87a6
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:31
msgid ""
"If not specified otherwise in second parameter, PostGIS SRID is used by "
"default."
msgstr ""

# a28778074abf41f8af29ddbfee4c97e0
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:33
msgid "specify CRS by its well-known text (WKT)::"
msgstr ""

# 5250f03dabbd472182b7e505be2f7802
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:40
msgid ""
"create invalid CRS and then use one of the :func:`create*` functions to "
"initialize it. In following example we use Proj4 string to initialize the "
"projection::"
msgstr ""

# c7e418c06b1e4884abc78b7c51f340dd
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:47
msgid ""
"It's wise to check whether creation (i.e. lookup in the database) of the CRS "
"has been successful: :func:`isValid` must return :const:`True`."
msgstr ""

# 7f45270732484e798a845cebbcaa8fe6
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:50
msgid ""
"Note that for initialization of spatial reference systems QGIS needs to "
"lookup appropriate values in its internal database :file:`srs.db`. Thus in "
"case you create an independent application you need to set paths correctly "
"with :func:`QgsApplication.setPrefixPath` otherwise it will fail to find the "
"database. If you are running the commands from QGIS python console or "
"developing a plugin you do not care: everything is already set up for you."
msgstr ""

# a512cbcebe35465d8fcd0d5fd3bcd7db
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:57
msgid "Accessing spatial reference system information::"
msgstr ""

# f7abfa3fde994d6da850bfd0377ed1ea
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:74
msgid "Projections"
msgstr ""

# 4237af60f38940ff9747fbd66955ece8
#: ../../source/docs/pyqgis_developer_cookbook/05_crs.rst:76
msgid ""
"You can do transformation between different spatial reference systems by "
"using :class:`QgsCoordinateTransform` class. The easiest way to use it is to "
"create source and destination CRS and construct :class:"
"`QgsCoordinateTransform` instance with them. Then just repeatedly call :func:"
"`transform` function to do the transformation. By default it does forward "
"transformation, but it is capable to do also inverse transformation::"
msgstr ""
