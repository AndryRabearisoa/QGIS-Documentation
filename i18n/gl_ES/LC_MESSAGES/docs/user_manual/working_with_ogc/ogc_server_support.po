# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 5a121ea5f006486c8acc84c766b917eb
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:7
msgid "|updatedisclaimer|"
msgstr ""

# 766d684ca77a40bb8325a0956e77b571
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:14
msgid "QGIS Server"
msgstr ""

# 945def3bd9ca4c0595287635d3c01837
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:16
msgid ""
"QGIS Server is an open source WMS 1.3 and WFS 1.0.0 implementation which, in "
"addition, implements advanced cartographic features for thematic mapping. "
"The QGIS Server is a FastCGI/CGI (Common Gateway Interface) application "
"written in C++ that works together with a webserver (e.g. Apache, Lighttpd). "
"It is funded by the EU projects Orchestra, Sany and the city of Uster in "
"Switzerland."
msgstr ""

# 2a728773a7204bcfbcc467f8451f55bf
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:24
msgid ""
"It uses QGIS as backend for the GIS logic and for map rendering. Furthermore "
"the Qt library is used for graphics and for platform independent C++ "
"programming. In contrast to other WMS software, the QGIS Server uses "
"cartographic rules in as a configuration language, both for the server "
"configuration and for the user-defined cartographic rules."
msgstr ""

# e427aa0d3ce3499797b44db195db1888
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:32
msgid ""
"Moreover, the QGIS Server project provides the 'Publish to Web' plugin, a "
"plugin for QGIS desktop which exports the current layers and symbology as a "
"web project for QGIS Server (containing cartographic visualization rules "
"expressed in SLD)."
msgstr ""

# a6d617db6a7e4d8a9578ab97a85baf41
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:37
msgid ""
"As QGIS desktop and QGIS Server use the same visualization libraries, the "
"maps that are published on the web look the same as in desktop GIS. The "
"Publish to Web plugin currently supports basic symbolization, with more "
"complex cartographic visualization rules introduced manually. As the "
"configuration is performed with the `SLD standard <http://www.opengeospatial."
"org/standards/sld>`_ and its documented extensions, there is only one "
"standardised language to learn, which greatly simplifies the complexity of "
"creating maps for the Web."
msgstr ""

# 5c70b7918b8e4318b3a5eb86b84fc366
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:45
msgid ""
"In one of the following manuals we will provide a sample configuration to "
"set up a QGIS Server. But for now we recommend to read one of the following "
"URLs to get more information:"
msgstr ""

# c9c53da4ba2a4b8cbf98469473dcc767
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:49
msgid "http://karlinapp.ethz.ch/qgis_wms/"
msgstr ""

# 5ae23f10597849fdb499e9ac59dbe0c3
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:50
msgid "http://www.qgis.org/wiki/QGIS_mapserver_tutorial"
msgstr ""

# d56e0c509b8c41bf860ea14865a27b79
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:51
msgid ""
"http://linfiniti.com/2010/08/qgis-mapserver-a-wms-server-for-the-masses/"
msgstr ""

# 2af72d07865b443db6420a3c02105a11
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:56
msgid "Sample installation on Debian Squeeze"
msgstr ""

# d4894d68d0e44c0ab48ecbbf96ea6101
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:58
msgid ""
"At this point we will give a short and simple sample installation howto for "
"Debian Squeeze. Many other OS provide packages for QGIS Server, too. If you "
"have to build it all from source, please refer to the URLs above."
msgstr ""

# 821a426cf2ed42898328adcd5f727c66
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:62
msgid ""
"Apart from qgis and qgis-mapserver you need a webserver, in our case "
"apache2. You can install all packages with aptitude or apt-get install "
"together with other necessary dependency packages."
msgstr ""

# 3746268dbed442f6bdaeff4184ef571f
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:66
msgid ""
"After installation you should test, if the webserver and qgis server works "
"as expected."
msgstr ""

# 60e87e15433a4f5a9c0ce71eed3e811c
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:69
msgid ""
"Make sure the apache server is running with ``/etc/init.d/apache2 start``. "
"Open a web browser and type URL: ``http://localhost``. If apache is up, you "
"should see the message 'It works!'."
msgstr ""

# 7f2eadf8c38341f9a89205cc6401e889
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:73
msgid ""
"Now we test the qgis server installation. The :file:`qgis_mapserv.fcgi` is "
"available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard "
"wms that shows the state boundaries of the Unites States of America "
"figure_server_1_. Add the WMS with the URL ``http://localhost/cgi-bin/"
"qgis_mapserv.fcgi`` as described in :ref:`ogc-wms-servers`."
msgstr ""

# 39ff0613b49249ecbf3cf0bc1a61d628
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:95
msgid "Creating a WMS from a QGIS project"
msgstr ""

# c995fbe79b614850a90462ced9aa8bf2
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:97
msgid ""
"To provide a new qgis wms server we have to create a qgis project file with "
"some data. Here we use the 'regions' and the 'aiport' shapefiles from the "
"qgis_sample_dataset."
msgstr ""

# 15579d3da6ac4b56a57a967225253022
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:101
msgid ""
"First load the shapefiles and define the colors and styles of the layers in "
"QGIS and define the project CRS, if not already done. In a next step define "
"the fields 'Service Capabilities', 'Coordinate System Restrictions' and "
"'Advertised Extend' under :menuselection:`Settings --> Project Properties --"
"> WMS Server` and define the fields 'Service Capabilities', 'Coordinate "
"System Restrictions' and 'Advertised Extend'. Additionally you can enable "
"the checkbox |checkbox| :guilabel:`Add WKT geometry to feature into "
"response` to make the layers queryable (see figure_server_2_). Now save the "
"session in a project file :file:`alaska\\_airports.qgs`."
msgstr ""

# 89277a1c3fd24087a3fd9e80e3bbe6f7
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:123
msgid ""
"To provide the project as a WMS, we create a new folder ``/usr/lib/cgi-bin/"
"project`` with admin privileges and add the project file :file:`alaska"
"\\_airports.qgs` and a copy of the :file:`qgis\\_mapserv.fcgi` file - that's "
"all."
msgstr ""

# 782bc396b72c4bafb4c09ae92772e497
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:127
msgid ""
"Now we test our project WMS, add the WMS with the URL ``http://localhost/cgi-"
"bin/project/qgis_mapserv.fcgi`` as described in :ref:`Creating a WMS from a "
"QGIS project` to QGIS and load the WMS, see figure_server_3_."
msgstr ""
