# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:11
# d68383e19f624987ba03e9db54308517
msgid "Geometry Handling"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:13
# 4abf4792dcca4623baca8792045c7700
msgid "Points, linestrings, polygons that represent a spatial feature are commonly referred to as geometries. In QGIS they are represented with :class:`QgsGeometry` class. All possible geometry types are nicely shown in `JTS discussion page <http://www.vividsolutions.com/jts/discussion.htm#spatialDataModel>`_."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:18
# d51cb5755381447c8e9a8fdee835a2fc
msgid "Sometimes one geometry is actually a collection of simple (single-part) geometries. Such a geometry is called multi-part geometry. If it contains just one type of simple geometry, we call it multi-point, multi-linestring or multi-polygon. For example, a country consisting of multiple islands can be represented as a multi-polygon."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:24
# ba4a5eee6ebe429d9b99a59d0527ff13
msgid "The coordinates of geometries can be in any coordinate reference system (CRS). When fetching features from a layer, associated geometries will have coordinates in CRS of the layer."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:31
# 63374aa861bb446bba8137329b72807b
msgid "Geometry Construction"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:33
# e83af54a608644979660f2ff00ee850a
msgid "There are several options how to create a geometry:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:35
# 811fb1631b764c039dd9f312b78b9df7
msgid "from coordinates::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:41
# 91d67d794c32422fbc2a00a7814de042
msgid "Coordinates are given using :class:`QgsPoint` class."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:43
# a244102e804844199b59f27305720c4f
msgid "Polyline (Linestring) is represented by a list of points. Polygon is represented by a list of linear rings (i.e. closed linestrings). First ring is outer ring (boundary), optional subsequent rings are holes in the polygon."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:47
# 3a180b10d2ec4158bbc491c03987c3ed
msgid "Multi-part geometries go one level further: multi-point is a list of points, multi-linestring is a list of linestrings and multi-polygon is a list of polygons."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:51
# 7c0291430c28463992064ee1915c0661
msgid "from well-known text (WKT)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:55
# 8d8a6689d15a4e2e8a01c72dc4455803
msgid "from well-known binary (WKB)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:64
# 984f2d9f92754bfdb29b162a4e025049
msgid "Access to Geometry"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:66
# 5509cba4780445d8b930491d0f35ee01
msgid "First, you should find out geometry type, :func:`wkbType` method is the one to use --- it returns a value from QGis.WkbType enumeration::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:78
# cd3f351266de43709412b86e2c04c692
msgid "As an alternative, one can use :func:`type` method which returns a value from QGis.GeometryType enumeration. There is also a helper function :func:`isMultipart` to find out whether a geometry is multipart or not."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:82
# d3e606f59cff46d79beef44cdfa65f08
msgid "To extract information from geometry there are accessor functions for every vector type. How to use accessors::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:92
# d3d5e2aa90284921a29afd7c970fe017
msgid "Note: the tuples (x,y) are not real tuples, they are :class:`QgsPoint` objects, the values are accessible with :func:`x` and :func:`y` methods."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:95
# 2e16275d83e34b4e82d4a12574903f70
msgid "For multipart geometries there are similar accessor functions: :func:`asMultiPoint`, :func:`asMultiPolyline`, :func:`asMultiPolygon()`."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:101
# 69b320dead3e49a4b1c624f18c88493d
msgid "Geometry Predicates and Operations"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:103
# 82a0d728ee23482b8f57443d71c254c8
msgid "QGIS uses GEOS library for advanced geometry operations such as geometry predicates (:func:`contains`, :func:`intersects`, ...) and set operations (:func:`union`, :func:`difference`, ...)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:108
# 81ea9c5174f641b68771e44c0cd46106
msgid "**TODO:**"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:110
# fabeaa258dd64acb8afde096aa9dbdca
msgid ":func:`area`, :func:`length`, :func:`distance`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:111
# 9f1067cdfafa4804a64baf0b7fb68e7e
msgid ":func:`transform`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/04_geometry.rst:112
# c7846038ddc4417794316ec8d199d222
msgid "available predicates and set operations"
msgstr ""

