# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:11
# 19c1b8ee8cc549bf98d96b0cfbf29d5a
msgid "Using Map Canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:13
# 98beaf7353874692afaa721490b1b307
msgid "The Map canvas widget is probably the most important widget within QGIS because it shows the map composed from overlaid map layers and allows interaction with the map and layers. The canvas shows always a part of the map defined by the current canvas extent. The interaction is done through the use of **map tools**: there are tools for panning, zooming, identifying layers, measuring, vector editing and others. Similar to other graphics programs, there is always one tool active and the user can switch between the available tools."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:22
# 9f70155ac95044b6a80c29c5baea9f56
msgid "Map canvas is implemented as :class:`QgsMapCanvas` class in :mod:`qgis.gui` module.  The implementation is based on the Qt Graphics View framework. This framework generally provides a surface and a view where custom graphics items are placed and user can interact with them.  We will assume that you are familiar enough with Qt to understand the concepts of the graphics scene, view and items. If not, please make sure to read the `overview of the framework <http://doc.qt.nokia.com/graphicsview.html>`_."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:30
# 2e908e4e3b284584a7e2c016c2586b22
msgid "Whenever the map has been panned, zoomed in/out (or some other action triggers a refresh), the map is rendered again within the current extent. The layers are rendered to an image (using :class:`QgsMapRenderer` class) and that image is then displayed in the canvas. The graphics item (in terms of the Qt graphics view framework) responsible for showing the map is :class:`QgsMapCanvasMap` class. This class also controls refreshing of the rendered map. Besides this item which acts as a background, there may be more **map canvas items**. Typical map canvas items are rubber bands (used for measuring, vector editing etc.) or vertex markers. The canvas items are usually used to give some visual feedback for map tools, for example, when creating a new polygon, the map tool creates a rubber band canvas item that shows the current shape of the polygon. All map canvas items are subclasses of :class:`QgsMapCanvasItem` which adds some more functionality to the basic ``QGraphicsItem`` objects."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:46
# 479449ae52024eedb2cfbdcc812cb51e
msgid "To summarize, the map canvas architecture consists of three concepts:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:48
# 1fcd455879ed426eb05da462123e87fb
msgid "map canvas --- for viewing of the map"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:49
# 0990390324334a4bae66cdcdd906e1d3
msgid "map canvas items --- additional items that can be displayed in map canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:50
# 115749c7d3044fe580d6a130551a9505
msgid "map tools --- for interaction with map canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:55
# cc77aec447ea495394a80588fdbb0ff0
msgid "Embedding Map Canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:57
# 1604670d589b4d38a6dd0aaf10dd6651
msgid "Map canvas is a widget like any other Qt widget, so using it is as simple as creating and showing it::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:63
# 096042653564497196e163a218ef0836
msgid "This produces a standalone window with map canvas. It can be also embedded into an existing widget or window. When using .ui files and Qt Designer, place a ``QWidget`` on the form and promote it to a new class: set ``QgsMapCanvas`` as class name and set ``qgis.gui`` as header file. The ``pyuic4`` utility will take care of it. This is a very convenient way of embedding the canvas. The other possibility is to manually write the code to construct map canvas and other widgets (as children of a main window or dialog) and create a layout."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:71
# 9125a5d7ef194450b4d115c83d0bb75b
msgid "By default, map canvas has black background and does not use anti-aliasing. To set white background and enable anti-aliasing for smooth rendering::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:77
# 6bbac18b5cf4457b97b38556680b1645
msgid "(In case you are wondering, ``Qt`` comes from ``PyQt4.QtCore`` module and ``Qt.white`` is one of the predefined ``QColor`` instances.)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:80
# a6fac183c2fe4b748709efa97a0e0fa2
msgid "Now it is time to add some map layers. We will first open a layer and add it to the map layer registry.  Then we will set the canvas extent and set the list of layers for canvas::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:97
# 201533401b8f4cf09b1946592893fb78
msgid "After executing these commands, the canvas should show the layer you have loaded."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:102
# cf890460bf1d4c1288b594236d3102ee
msgid "Using Map Tools with Canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:104
# a0582d2433ae420fbbc09e7676149ae3
msgid "The following example constructs a window that contains a map canvas and basic map tools for map panning and zooming.  Actions are created for activation of each tool: panning is done with :class:`QgsMapToolPan`, zooming in/out with a pair of :class:`QgsMapToolZoom` instances. The actions are set as checkable and later assigned to the tools to allow automatic handling of checked/unchecked state of the actions -- when a map tool gets activated, its action is marked as selected and the action of the previous map tool is deselected. The map tools are activated using :func:`setMapTool` method."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:169
# 1f80ef0829e843bda96795246ab81d54
msgid "You can put the above code to a file, e.g. ``mywnd.py`` and try it out in Python console within QGIS.  This code will put the currently selected layer into newly created canvas::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:177
# b0e4908af07b4326abcb989a71e80a6c
msgid "Just make sure that the ``mywnd.py`` file is located within Python search path (``sys.path``). If it isn't, you can simply add it: ``sys.path.insert(0, '/my/path')`` --- otherwise the import statement will fail, not finding the module."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:185
# 6b9441815c6943228fbc025f0dc55cf8
msgid "Rubber Bands and Vertex Markers"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:187
# 7e101597f3a64936987b105d6c64e81a
msgid "To show some additional data on top of the map in canvas, use map canvas items. It is possible to create custom canvas item classes (covered below), however there are two useful canvas item classes for convenience: :class:`QgsRubberBand` for drawing polylines or polygons, and :class:`QgsVertexMarker` for drawing points.  They both work with map coordinates, so the shape is moved/scaled automatically when the canvas is being panned or zoomed."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:195
# 04c2f697ad0d487d93596e3a43db5101
msgid "To show a polyline::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:201
# 16925e37410a49bd9e3138bbc077ab81
msgid "To show a polygon::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:207
# 809ac4975401487f9def6c5dcb45caa2
msgid "Note that points for polygon is not a plain list: in fact, it is a list of rings containing linear rings of the polygon: first ring is the outer border, further (optional) rings correspond to holes in the polygon."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:211
# 96575a2b89534c20a6266e6761d3c859
msgid "Rubber bands allow some customization, namely to change their color and line width::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:217
# f0ab6627371b4ee8a264628d4c6aa600
msgid "The canvas items are bound to the canvas scene. To temporarily hide them (and show again, use the :func:`hide` and :func:`show` combo. To completely remove the item, you have to remove it from the scene of the canvas::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:223
# f7612b699d2c4a24a6971577fe1d9643
msgid "(in C++ it's possible to just delete the item, however in Python ``del r`` would just delete the reference and the object will still exist as it is owned by the canvas)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:227
# a887f24a0c7b4b519c6d8c30189d7327
msgid "Rubber band can be also used for drawing points, however :class:`QgsVertexMarker` class is better suited for this (:class:`QgsRubberBand` would only draw a rectangle around the desired point). How to use the vertex marker::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:235
# c3ae9176cfc946639605bc066a13ebfb
msgid "This will draw a red cross on position [0,0]. It is possible to customize the icon type, size, color and pen width::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:243
# 8a54dc4cd0314d86af52ea492f73c098
msgid "For temprary hiding of vertex markers and removing them from canvas, the same applies as for the rubber bands."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:249
# 612f3a9787814664bbdac3492d996d53
msgid "Writing Custom Map Tools"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:251
# 0c9404d16b8b4c169a2b5fae11b16230
msgid "**TODO:** how to create a map tool"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:256
# 0a3adb0f966b4d7a972ddbc091eb116e
msgid "Writing Custom Map Canvas Items"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:258
# 47287e159f5641a1bfd42c593ac9ce7e
msgid "**TODO:** how to create a map canvas item"
msgstr ""

